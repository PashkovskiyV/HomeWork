var userName, userSecondName, userAge, greeting;

userName = 'Vladimir';
userSecondName = 'Pashkovskiy';
userAge = 26;
greeting = 'Hello!';

var userBio = greeting + ' My name is ' + userName + ' ' + userSecondName + '. I\'am ' + userAge + '.';
var userBio2 = `${greeting} My name is ${userName} ${userSecondName}. I\'am ${userAge}.`;

console.log(userBio, userBio2);


/*

+'40' + +'2'; // 42; знак "+" перед строкой, которая содержит число, преобразует ее в число. 40 + 2 = 42.

'2' + 3 ** 2; // 29; 3 во 2-й степени дает 9. При попытке суммировать строку '2' и число 9,
число 9 преобразуется в строку, и происходит конкатенация строк, в итоге которой мы получаем строку '29'. 

3 ** 2 / 3; // 3; 3 во 2-й степени дает число 9, 9 разделить на 3, дает 3.

3 ** (9 / 3); // 27; сначала выполняется действие в скобках, в ходе которого получается число 3. 
После этого просходит возведение числа 3 в 3-ю степень.

undefined + 1; // NaN; при попытке преобразоваь undefined в число, получаем NaN. NaN + 1 дает NaN. 

+null + 10; // 10; во время арифметического вычисления, null пребразуется в число 0.

null / 5; // 0; во время арифметического вычисления, null пребразуется в число 0.

'hello' + null; // 'hellonull'; во время конкатенации со строкой null преобразуется в строку.

'hello' - undefined + ' '; // 'NaN '; знак "-" относится только к арифметическим вычислениям.
По-этому JS пытается преобразовать 'hello' и undefined в числа, и получает NaN. Дальше происходит конкатенация NaN со строкой ' '.

'30' + 3 - '3'; // 300; При попытке прибавить любое значение к строке, мы получаем строку (в нашем случае мы получаем '303').
Дальше знак минус преобразует две строки в числа, с которыми происходит арифметическое действие.

10 % '5'; // 0; оператор '%' преобразует строку '5' в число 5, и выполнит проверку на остаток от деления.
В нашем случае 10 / 5 = 2 без остатка. 

var number = 5; // объявляем переменную number со значением 5;
2 * ++number; // 2 * 6 = 12; number = 6; так как префиксная форма инкремента, возвращается значение переменной number после выполнения инкремента. 
2 * number--; // 2 * 5 = 10; number = 5; так как постфиксная форма декремента, возвращается значение переменной number до выполнения декремента.

console.log(number); // 5;

 */